AWSTemplateFormatVersion: "2010-09-09"
Description: "Create IAM for Developer"
# リソース設定
Resources:
  # IP制限, MFA必須ポリシー
  IpRestrictionAndMFAForcePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: "IpRestrictionAndMFAForcePolicy"
      PolicyDocument:
        {
          "Version": "2012-10-17",
          "Statement": [
            # IP制限
            {
              "Resource": "*",
              "Action": "*",
              "Effect": "Deny",
              "Condition": {
                "NotIpAddress": {
                  "aws:SourceIp": [
                    # 任意のIPに変更してください
                    "xxx.xxx.xxx.xxx/32"
                  ]
                }
              }
            },
            # MFA必須化
            # {
            #   "Effect": "Deny",
            #   "NotAction": [
            #     "iam:*"
            #   ],
            #   "Resource": "*",
            #   "Condition": {
            #     "BoolIfExists": {
            #       "aws:MultiFactorAuthPresent": "false"
            #     }
            #   }
            # },
            # 全ユーザのリスト表示
            {
              "Effect": "Allow",
              "Action": [
                "iam:ListUsers",
                "iam:ListVirtualMFADevices"
              ],
              "Resource": "*"
            }
          ]
        }

  # IP制限, MFA必須ポリシー
  ChangeOwnPasswordPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: "ChangeOwnPasswordPolicy"
      PolicyDocument:
        {
          "Version": "2012-10-17",
          "Statement": [
            # 自身のパスワード変更＆MFA有効化ポリシー
            {
              "Effect": "Allow",
              "Action": [
                "iam:ChangePassword",
                "iam:CreateAccessKey",
                "iam:CreateVirtualMFADevice",
                "iam:DeactivateMFADevice",
                "iam:DeleteAccessKey",
                "iam:DeleteVirtualMFADevice",
                "iam:EnableMFADevice",
                "iam:GetAccountPasswordPolicy",
                "iam:UpdateAccessKey",
                "iam:UpdateSigningCertificate",
                "iam:UploadSigningCertificate",
                "iam:UpdateLoginProfile",
                "iam:ResyncMFADevice"              ],
              "Resource": [
                "Fn::Join" : [ "",["arn:aws:iam::",{ "Ref" : "AWS::AccountId" },":user/${aws:username}"]],
                "Fn::Join" : [ "",["arn:aws:iam::",{ "Ref" : "AWS::AccountId" },":mfa/${aws:username}"]]
              ]
            },
            # 全ユーザのリスト表示
            {
              "Effect": "Allow",
              "Action": [
                "iam:ListUsers",
                "iam:ListVirtualMFADevices"
              ],
              "Resource": "*"
            }
          ]
        }

  # ネットワーク系操作禁止ポリシー
  DenyNetworkAccessPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: "DenyNetworkAccessPolicy"
      PolicyDocument:
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Deny",
              "Action": [
                "ec2:AcceptVpcEndpointConnections",
                "ec2:AssociateDhcpOptions",
                "ec2:AssociateRouteTable",
                "ec2:AssociateSubnetCidrBlock",
                "ec2:AssociateVpcCidrBlock",
                "ec2:AttachInternetGateway",
                "ec2:AttachNetworkInterface",
                "ec2:AttachVpnGateway",
                "ec2:CreateCustomerGateway",
                "ec2:CreateDefaultSubnet",
                "ec2:CreateDefaultVpc",
                "ec2:CreateDhcpOptions",
                "ec2:CreateEgressOnlyInternetGateway",
                "ec2:CreateInternetGateway",
                "ec2:CreateNetworkAcl",
                "ec2:CreateNetworkAclEntry",
                "ec2:CreateRoute",
                "ec2:CreateRouteTable",
                "ec2:CreateSecurityGroup",
                "ec2:CreateSubnet",
                "ec2:CreateVpc",
                "ec2:CreateVpcEndpoint",
                "ec2:CreateVpcEndpointConnectionNotification",
                "ec2:CreateVpcEndpointServiceConfiguration",
                "ec2:CreateVpnConnection",
                "ec2:CreateVpnConnectionRoute",
                "ec2:CreateVpnGateway",
                "ec2:DeleteEgressOnlyInternetGateway",
                "ec2:DeleteNatGateway",
                "ec2:DeleteNetworkInterface",
                "ec2:DeleteNetworkInterfacePermission",
                "ec2:DeletePlacementGroup",
                "ec2:DeleteSubnet",
                "ec2:DeleteVpc",
                "ec2:DeleteVpcEndpointConnectionNotifications",
                "ec2:DeleteVpcEndpoints",
                "ec2:DeleteVpcEndpointServiceConfigurations",
                "ec2:DeleteVpnConnection",
                "ec2:DeleteVpnConnectionRoute",
                "ec2:DeleteVpnGateway",
                "ec2:DetachInternetGateway",
                "ec2:DetachNetworkInterface",
                "ec2:DetachVpnGateway",
                "ec2:DisableVgwRoutePropagation",
                "ec2:DisableVpcClassicLinkDnsSupport",
                "ec2:DisassociateRouteTable",
                "ec2:DisassociateSubnetCidrBlock",
                "ec2:DisassociateVpcCidrBlock",
                "ec2:EnableVgwRoutePropagation",
                "ec2:EnableVpcClassicLinkDnsSupport",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:ModifySubnetAttribute",
                "ec2:ModifyVpcAttribute",
                "ec2:ModifyVpcEndpoint",
                "ec2:ModifyVpcEndpointConnectionNotification",
                "ec2:ModifyVpcEndpointServiceConfiguration",
                "ec2:ModifyVpcEndpointServicePermissions",
                "ec2:ModifyVpcPeeringConnectionOptions",
                "ec2:ModifyVpcTenancy",
                "ec2:MoveAddressToVpc",
                "ec2:RejectVpcEndpointConnections",
                "ec2:ReplaceNetworkAclAssociation",
                "ec2:ReplaceNetworkAclEntry",
                "ec2:ReplaceRoute",
                "ec2:ReplaceRouteTableAssociation",
                "ec2:ResetNetworkInterfaceAttribute",
                "ec2:RestoreAddressToClassic",
                "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
                "directconnect:*"
                ],
              "Resource": "*"
            },
            # 全ユーザのリスト表示
            {
              "Effect": "Deny",
              "Action": [
                  "ec2:AcceptVpcPeeringConnection",
                  "ec2:AttachClassicLinkVpc",
                  "ec2:AuthorizeSecurityGroupEgress",
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:CreateVpcPeeringConnection",
                  "ec2:DeleteCustomerGateway",
                  "ec2:DeleteDhcpOptions",
                  "ec2:DeleteInternetGateway",
                  "ec2:DeleteNetworkAcl",
                  "ec2:DeleteNetworkAclEntry",
                  "ec2:DeleteRoute",
                  "ec2:DeleteRouteTable",
                  "ec2:DeleteSecurityGroup",
                  "ec2:DeleteVolume",
                  "ec2:DeleteVpcPeeringConnection",
                  "ec2:DetachClassicLinkVpc",
                  "ec2:DisableVpcClassicLink",
                  "ec2:EnableVpcClassicLink",
                  "ec2:GetConsoleScreenshot",
                  "ec2:RejectVpcPeeringConnection",
                  "ec2:RevokeSecurityGroupEgress",
                  "ec2:RevokeSecurityGroupIngress",
                  "ec2:AcceptTransitGatewayVpcAttachment",
                  "ec2:AssociateTransitGatewayRouteTable",
                  "ec2:CreateTransitGateway",
                  "ec2:CreateTransitGatewayRoute",
                  "ec2:CreateTransitGatewayRouteTable",
                  "ec2:CreateTransitGatewayVpcAttachment",
                  "ec2:DeleteTransitGateway",
                  "ec2:DeleteTransitGatewayRoute",
                  "ec2:DeleteTransitGatewayRouteTable",
                  "ec2:DeleteTransitGatewayVpcAttachment",
                  "ec2:DescribeTransitGatewayAttachments",
                  "ec2:DescribeTransitGatewayRouteTables",
                  "ec2:DescribeTransitGatewayVpcAttachments",
                  "ec2:DescribeTransitGateways",
                  "ec2:DisableTransitGatewayRouteTablePropagation",
                  "ec2:DisassociateTransitGatewayRouteTable",
                  "ec2:EnableTransitGatewayRouteTablePropagation",
                  "ec2:ExportTransitGatewayRoutes",
                  "ec2:GetTransitGatewayAttachmentPropagations",
                  "ec2:GetTransitGatewayRouteTableAssociations",
                  "ec2:GetTransitGatewayRouteTablePropagations",
                  "ec2:ModifyTransitGatewayVpcAttachment",
                  "ec2:RejectTransitGatewayVpcAttachment",
                  "ec2:ReplaceTransitGatewayRoute",
                  "ec2:SearchTransitGatewayRoutes"
              ],
              "Resource": "*"
            },
          ]
        }


  # 管理者グループの定義
  AdminGroup:
    Type: "AWS::IAM::Group"
    DependsOn:
      - IpRestrictionAndMFAForcePolicy
    Properties:
      GroupName: "Admins"
      ManagedPolicyArns:
        # 管理者ポリシー設定（AWS管理ポリシー）
        - "arn:aws:iam::aws:policy/AdministratorAccess"
        - Fn::Join: ["", ["arn:aws:iam::", !Ref "AWS::AccountId", ":policy/IpRestrictionAndMFAForcePolicy"]]

  # ネットワーク管理者グループの定義
  NetworkAdminGroup:
    Type: "AWS::IAM::Group"
    DependsOn:
      - IpRestrictionAndMFAForcePolicy
      - ChangeOwnPasswordPolicy
    Properties:
      GroupName: "NetworkAdmins"
      ManagedPolicyArns:
        # ネットワーク管理者ポリシー設定（AWS管理ポリシー）
        - "arn:aws:iam::aws:policy/job-function/NetworkAdministrator"
        - "arn:aws:iam::aws:policy/ReadOnlyAccess"
        - Fn::Join: ["", ["arn:aws:iam::", !Ref "AWS::AccountId", ":policy/IpRestrictionAndMFAForcePolicy"]]
        - Fn::Join: ["", ["arn:aws:iam::", !Ref "AWS::AccountId", ":policy/ChangeOwnPasswordPolicy"]]

  # 開発者グループの定義
  DeveloperGroup:
    Type: "AWS::IAM::Group"
    DependsOn:
      - IpRestrictionAndMFAForcePolicy
      - ChangeOwnPasswordPolicy
      - DenyNetworkAccessPolicy
    Properties:
      GroupName: "Developers"
      ManagedPolicyArns:
        # パワーユーザーポリシー設定（AWS管理ポリシー）
        - "arn:aws:iam::aws:policy/PowerUserAccess"
        - Fn::Join: ["", ["arn:aws:iam::", !Ref "AWS::AccountId", ":policy/IpRestrictionAndMFAForcePolicy"]]
        - Fn::Join: ["", ["arn:aws:iam::", !Ref "AWS::AccountId", ":policy/ChangeOwnPasswordPolicy"]]
        - Fn::Join: ["", ["arn:aws:iam::", !Ref "AWS::AccountId", ":policy/DenyNetworkAccessPolicy"]]

  # オペレーターグループの定義
  OperatorGroup:
    Type: "AWS::IAM::Group"
    DependsOn:
      - IpRestrictionAndMFAForcePolicy
      - ChangeOwnPasswordPolicy
      - DenyNetworkAccessPolicy
    Properties:
      GroupName: "Operators"
      ManagedPolicyArns:
        # サポート設定（AWS管理ポリシー）
        - "arn:aws:iam::aws:policy/AWSSupportAccess"
        - "arn:aws:iam::aws:policy/ReadOnlyAccess"
        - Fn::Join: ["", ["arn:aws:iam::", !Ref "AWS::AccountId", ":policy/IpRestrictionAndMFAForcePolicy"]]
        - Fn::Join: ["", ["arn:aws:iam::", !Ref "AWS::AccountId", ":policy/ChangeOwnPasswordPolicy"]]
  # 経理担当者グループの定義
  BillingGroup:
    Type: "AWS::IAM::Group"
    DependsOn:
      - IpRestrictionAndMFAForcePolicy
      - ChangeOwnPasswordPolicy
      - DenyNetworkAccessPolicy
    Properties:
      GroupName: "BillingUsers"
      ManagedPolicyArns:
        # サポート設定（AWS管理ポリシー）
        - "arn:aws:iam::aws:policy/job-function/Billing"
        - "arn:aws:iam::aws:policy/ReadOnlyAccess"
        - Fn::Join: ["", ["arn:aws:iam::", !Ref "AWS::AccountId", ":policy/IpRestrictionAndMFAForcePolicy"]]
        - Fn::Join: ["", ["arn:aws:iam::", !Ref "AWS::AccountId", ":policy/ChangeOwnPasswordPolicy"]]

  # スイッチ元のロールを制限した管理者ロールの定義
  AdminRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "AdminRole"
      Path: "/"
      # 指定したAWSアカウントとの紐付けを許可
      AssumeRolePolicyDocument:
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  { "Fn::Join" : [
                      "", [
                        "arn:aws:iam::",
                        { "Ref" : "AWS::AccountId" },
                        ":user/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                      ]
                    ]
                  }
                ]
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "Bool": {
                  "aws:MultiFactorAuthPresent": "true"
                }
              }
            }
          ]
        }
      # 管理者権限
      ManagedPolicyArns:
          - "arn:aws:iam::aws:policy/AdministratorAccess"
